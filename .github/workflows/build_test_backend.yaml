name: Test and Build Backend

on:
  pull_request:
    branches:
        - main
  workflow_dispatch:

jobs:
  check_files:
    runs-on: ubuntu-latest
    outputs:
      backend_changes: ${{ steps.backend_changes.outputs.backend_changes }}
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
    - name: Check for changes in the backend folder
      id: backend_changes
      run: |
        git fetch origin main
        git fetch origin ${{ github.head_ref }}
        if git diff --name-only origin/${{ github.base_ref }} origin/${{ github.head_ref }} | grep -q '^backend/'; then
          echo "backend_changes=true" >> $GITHUB_OUTPUT
        else
          echo "backend_changes=false" >> $GITHUB_OUTPUT
        fi
  test:
    runs-on: ubuntu-latest
    needs: check_files
    if: ${{ needs.check_files.outputs.backend_changes == 'true' }}
    steps:
    - uses: actions/checkout@v4
    - name: Cache Docker images based on AbstractIntegratioTest.java
      uses: actions/cache@v4
      id: cache
      with:
        path: /tmp/.docker-cache
        key: ${{ runner.os }}-docker-testcontainers-${{ hashFiles('backend/src/test/java/com/sadi/backend/AbstractBaseIntegrationTest.java') }}
    - name: Pre-pull Testcontainers images using AbstractIntegratioTest.java
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
          ls -l
          bash scripts/pull-images.sh
          mkdir -p /tmp/.docker-cache
          docker save $(bash scripts/get-images.sh | xargs) -o /tmp/.docker-cache/testcontainers.tar
    - name: Load cached images
      if: steps.cache.outputs.cache-hit == 'true'
      run: docker load -i /tmp/.docker-cache/testcontainers.tar
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'
    - name: Cache Maven packages manually
      uses: actions/cache@v4
      with:
        path: |
          ~/.m2/repository
        key: maven-${{ runner.os }}-${{ hashFiles('backend/pom.xml', 'backend/.mvn/wrapper/maven-wrapper.properties') }}
        restore-keys: |
          maven-${{ runner.os }}-
    - name: Test with Maven
      run: |
        cd ./backend
        AZURE_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }} AZURE_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }} AZURE_TENANT_ID=${{ secrets.AZURE_TENANT_ID }} JWT_SECRET_KEY=u4az5oOOo45Ck57cVsx7LrmiFDv/c4frDEAWZBSIUDk= SPRING_PROFILES_ACTIVE=test mvn test