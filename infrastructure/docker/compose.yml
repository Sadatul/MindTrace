services:
  reverse-proxy:
    image: traefik:v3.4
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=sadatulislamsadi@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
    networks:
      - host_network
      
  db:
    image: postgres:17
    container_name: postgres
    environment:
      - POSTGRES_USER=software
      - POSTGRES_PASSWORD=software
      - POSTGRES_DB=software
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "software" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - host_network
      
  backend:
    depends_on:
      db:
        condition: service_healthy
    image: ghcr.io/sadatul/mindtrace_backend:0.0.3-snapshot
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend-http.rule=Host(`mindtrace.pinklifeline.xyz`)"
      - "traefik.http.routers.backend-http.entrypoints=web"
      - "traefik.http.routers.backend-http.middlewares=redirect-to-https"

      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"

      - "traefik.http.routers.backend.rule=Host(`mindtrace.pinklifeline.xyz`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"

      - "traefik.http.services.backend.loadbalancer.server.port=8080"

    environment:
      - DB_URL=db:5432/software
      - DB_USERNAME=software
      - DB_PASSWORD=software
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_USER=${REDIS_USER}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_KEY=${AZURE_OPENAI_KEY}
      - FIREBASE_CREDENTIAL=${FIREBASE_CREDENTIAL}
      - QDRANT_API_KEY=${QDRANT_API_KEY}
      - QDRANT_HOST=${QDRANT_HOST}
      - BOT_TOKEN=${BOT_TOKEN}
    networks:
      - host_network

networks:
  host_network:

volumes:
  postgres-data:
  letsencrypt: