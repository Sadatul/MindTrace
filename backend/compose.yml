name: software

services:
  db:
    image: postgres:17
    container_name: postgres
    environment:
      - POSTGRES_USER=software
      - POSTGRES_PASSWORD=software
      - POSTGRES_DB=software
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "software" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - host_network
  rabbitmq:
    hostname: 'sadatul'
    image: sadatul/rabbitmq_mindtrace:latest
    container_name: 'rabbitmq'
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - host_network
#  backend:
#    depends_on:
#      db:
#        condition: service_healthy
#    build:
#      context: .
#    container_name: backend
#    environment:
#      - DB_URL=db:5432/software
#      - DB_USERNAME=software
#      - DB_PASSWORD=software
#      - REDIS_HOST=${REDIS_HOST}
#      - REDIS_PORT=${REDIS_PORT}
#      - REDIS_USER=${REDIS_USER}
#      - REDIS_PASSWORD=${REDIS_PASSWORD}
#      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
#      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
#      - AZURE_OPENAI_KEY=${AZURE_OPENAI_KEY}
#      - FIREBASE_CREDENTIAL=${FIREBASE_CREDENTIAL}
#      - QDRANT_API_KEY=${QDRANT_API_KEY}
#      - QDRANT_HOST=${QDRANT_HOST}
#    ports:
#      - "8080:8080"
#    networks:
#      - host_network
volumes:
  rabbitmq_data:
  rabbitmq_log:
networks:
  host_network: